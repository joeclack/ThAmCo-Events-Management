// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ThAmCo.Catering.Data.Migrations
{
    [DbContext(typeof(CateringDbContext))]
    [Migration("20250110151657_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ThAmCo.Catering.Models.FoodBooking", b =>
                {
                    b.Property<int>("FoodBookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FoodBookingId"));

                    b.Property<int?>("ClientReferenceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FoodBookingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfGuests")
                        .HasColumnType("int");

                    b.HasKey("FoodBookingId");

                    b.HasIndex("MenuId");

                    b.ToTable("FoodBookings");
                });

            modelBuilder.Entity("ThAmCo.Catering.Models.FoodItem", b =>
                {
                    b.Property<int>("FoodItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FoodItemId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("UnitPrice")
                        .HasColumnType("real");

                    b.HasKey("FoodItemId");

                    b.ToTable("FoodItems");

                    b.HasData(
                        new
                        {
                            FoodItemId = 1,
                            Description = "Grilled chicken with lettuce, tomato, and mayo",
                            Name = "Classic Chicken Sandwich",
                            UnitPrice = 5.99f
                        },
                        new
                        {
                            FoodItemId = 2,
                            Description = "Whole-wheat wrap with hummus and fresh veggies",
                            Name = "Fresh Veggie Wrap",
                            UnitPrice = 4.49f
                        },
                        new
                        {
                            FoodItemId = 3,
                            Description = "Romaine lettuce with Caesar dressing and croutons",
                            Name = "Caesar Salad",
                            UnitPrice = 3.99f
                        },
                        new
                        {
                            FoodItemId = 4,
                            Description = "Juicy grilled steak seasoned perfectly",
                            Name = "Grilled Steak",
                            UnitPrice = 12.99f
                        },
                        new
                        {
                            FoodItemId = 5,
                            Description = "Turkey, bacon, lettuce, tomato on toasted bread",
                            Name = "Turkey Club Sandwich",
                            UnitPrice = 6.49f
                        },
                        new
                        {
                            FoodItemId = 6,
                            Description = "Ham, cheese, lettuce, and tomato on bread",
                            Name = "Ham and Cheese Sandwich",
                            UnitPrice = 5.19f
                        },
                        new
                        {
                            FoodItemId = 7,
                            Description = "Melted cheddar cheese on toasted bread",
                            Name = "Grilled Cheese Sandwich",
                            UnitPrice = 4.99f
                        },
                        new
                        {
                            FoodItemId = 8,
                            Description = "Bacon, lettuce, and tomato on toasted bread",
                            Name = "BLT Sandwich",
                            UnitPrice = 5.79f
                        },
                        new
                        {
                            FoodItemId = 9,
                            Description = "Grilled fish tacos with slaw and spicy mayo",
                            Name = "Fish Tacos",
                            UnitPrice = 7.99f
                        },
                        new
                        {
                            FoodItemId = 10,
                            Description = "Pasta with rich meat sauce",
                            Name = "Spaghetti Bolognese",
                            UnitPrice = 8.99f
                        },
                        new
                        {
                            FoodItemId = 11,
                            Description = "Penne pasta in spicy tomato sauce with garlic",
                            Name = "Penne Arrabbiata",
                            UnitPrice = 7.49f
                        },
                        new
                        {
                            FoodItemId = 12,
                            Description = "Creamy risotto with wild mushrooms",
                            Name = "Mushroom Risotto",
                            UnitPrice = 9.49f
                        },
                        new
                        {
                            FoodItemId = 13,
                            Description = "Fettuccine with Alfredo sauce and grilled chicken",
                            Name = "Chicken Alfredo",
                            UnitPrice = 10.99f
                        },
                        new
                        {
                            FoodItemId = 14,
                            Description = "Burritos filled with beef, rice, beans, and cheese",
                            Name = "Beef Burritos",
                            UnitPrice = 6.99f
                        },
                        new
                        {
                            FoodItemId = 15,
                            Description = "Veggies, beans, and avocado in tacos",
                            Name = "Vegetarian Tacos",
                            UnitPrice = 5.49f
                        },
                        new
                        {
                            FoodItemId = 16,
                            Description = "Pizza with BBQ chicken and mozzarella",
                            Name = "BBQ Chicken Pizza",
                            UnitPrice = 12.99f
                        },
                        new
                        {
                            FoodItemId = 17,
                            Description = "Classic pepperoni pizza with marinara",
                            Name = "Pepperoni Pizza",
                            UnitPrice = 11.49f
                        },
                        new
                        {
                            FoodItemId = 18,
                            Description = "Pizza with fresh tomatoes, mozzarella, and basil",
                            Name = "Margherita Pizza",
                            UnitPrice = 9.99f
                        },
                        new
                        {
                            FoodItemId = 19,
                            Description = "Beef burger with cheddar, lettuce, and tomato",
                            Name = "Cheeseburger",
                            UnitPrice = 6.49f
                        },
                        new
                        {
                            FoodItemId = 20,
                            Description = "Veggie patty with lettuce, tomato, and avocado",
                            Name = "Veggie Burger",
                            UnitPrice = 5.99f
                        },
                        new
                        {
                            FoodItemId = 21,
                            Description = "Crispy wings with your choice of sauce",
                            Name = "Chicken Wings",
                            UnitPrice = 7.99f
                        },
                        new
                        {
                            FoodItemId = 22,
                            Description = "Golden mozzarella sticks with marinara",
                            Name = "Mozzarella Sticks",
                            UnitPrice = 4.99f
                        },
                        new
                        {
                            FoodItemId = 23,
                            Description = "Crispy onion rings with dipping sauce",
                            Name = "Onion Rings",
                            UnitPrice = 3.99f
                        },
                        new
                        {
                            FoodItemId = 24,
                            Description = "Tortilla chips with cheese, beans, and toppings",
                            Name = "Nachos",
                            UnitPrice = 6.99f
                        },
                        new
                        {
                            FoodItemId = 25,
                            Description = "Hummus served with warm pita bread",
                            Name = "Hummus and Pita Bread",
                            UnitPrice = 4.49f
                        },
                        new
                        {
                            FoodItemId = 26,
                            Description = "Spaghetti with meatballs and marinara sauce",
                            Name = "Spaghetti and Meatballs",
                            UnitPrice = 8.99f
                        },
                        new
                        {
                            FoodItemId = 27,
                            Description = "Layers of pasta, meat sauce, and cheese",
                            Name = "Lasagna",
                            UnitPrice = 9.99f
                        },
                        new
                        {
                            FoodItemId = 28,
                            Description = "Breaded chicken with marinara sauce and cheese",
                            Name = "Chicken Parmesan",
                            UnitPrice = 10.99f
                        },
                        new
                        {
                            FoodItemId = 29,
                            Description = "Grilled steak with your choice of sides",
                            Name = "Steak",
                            UnitPrice = 12.99f
                        },
                        new
                        {
                            FoodItemId = 30,
                            Description = "Grilled salmon with lemon and dill",
                            Name = "Salmon",
                            UnitPrice = 11.99f
                        },
                        new
                        {
                            FoodItemId = 31,
                            Description = "Crispy french fries",
                            Name = "French Fries",
                            UnitPrice = 2.99f
                        },
                        new
                        {
                            FoodItemId = 32,
                            Description = "Creamy mashed potatoes",
                            Name = "Mashed Potatoes",
                            UnitPrice = 2.49f
                        },
                        new
                        {
                            FoodItemId = 33,
                            Description = "Steamed green beans",
                            Name = "Green Beans",
                            UnitPrice = 1.99f
                        },
                        new
                        {
                            FoodItemId = 34,
                            Description = "Buttered corn",
                            Name = "Corn",
                            UnitPrice = 1.99f
                        },
                        new
                        {
                            FoodItemId = 35,
                            Description = "Fresh salad with dressing",
                            Name = "Salad",
                            UnitPrice = 2.99f
                        },
                        new
                        {
                            FoodItemId = 36,
                            Description = "Your choice of ice cream",
                            Name = "Ice Cream",
                            UnitPrice = 2.99f
                        },
                        new
                        {
                            FoodItemId = 37,
                            Description = "A slice of cake",
                            Name = "Cake",
                            UnitPrice = 3.99f
                        },
                        new
                        {
                            FoodItemId = 38,
                            Description = "Chocolate brownies",
                            Name = "Brownies",
                            UnitPrice = 2.99f
                        },
                        new
                        {
                            FoodItemId = 39,
                            Description = "Your choice of cookie",
                            Name = "Cookies",
                            UnitPrice = 1.99f
                        },
                        new
                        {
                            FoodItemId = 40,
                            Description = "Fresh fruit salad",
                            Name = "Fruit Salad",
                            UnitPrice = 2.99f
                        });
                });

            modelBuilder.Entity("ThAmCo.Catering.Models.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuId"));

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MenuId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            MenuName = "Basic Lunch"
                        },
                        new
                        {
                            MenuId = 2,
                            MenuName = "Vegetarian Feast"
                        },
                        new
                        {
                            MenuId = 3,
                            MenuName = "Deluxe Dinner"
                        },
                        new
                        {
                            MenuId = 4,
                            MenuName = "Healthy Lunch"
                        },
                        new
                        {
                            MenuId = 5,
                            MenuName = "Pizza Party"
                        },
                        new
                        {
                            MenuId = 6,
                            MenuName = "BBQ Feast"
                        });
                });

            modelBuilder.Entity("ThAmCo.Catering.Models.MenuFoodItem", b =>
                {
                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("FoodItemId")
                        .HasColumnType("int");

                    b.HasKey("MenuId", "FoodItemId");

                    b.HasIndex("FoodItemId");

                    b.ToTable("MenuFoodItems");
                });

            modelBuilder.Entity("ThAmCo.Catering.Models.FoodBooking", b =>
                {
                    b.HasOne("ThAmCo.Catering.Models.Menu", "Menu")
                        .WithMany("FoodBookings")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("ThAmCo.Catering.Models.MenuFoodItem", b =>
                {
                    b.HasOne("ThAmCo.Catering.Models.FoodItem", "FoodItem")
                        .WithMany("MenuFoodItems")
                        .HasForeignKey("FoodItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ThAmCo.Catering.Models.Menu", "Menu")
                        .WithMany("MenuFoodItems")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FoodItem");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("ThAmCo.Catering.Models.FoodItem", b =>
                {
                    b.Navigation("MenuFoodItems");
                });

            modelBuilder.Entity("ThAmCo.Catering.Models.Menu", b =>
                {
                    b.Navigation("FoodBookings");

                    b.Navigation("MenuFoodItems");
                });
#pragma warning restore 612, 618
        }
    }
}
