@page
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Mvc.RazorPages;

@attribute [Authorize]
@model ThAmCo.Events.Pages.Staff.IndexModel
@{
    ViewData["Title"] = "Staff Members List";
}

<div class="container mt-5">
    <header class="mb-4">
        <h1 class="display-4">Staff Management</h1>
    </header>

    <section class="d-flex justify-content-between align-items-center mb-3">
        <a type="button" asp-page="/Staff/Create" class="btn btn-primary">
            Create New Staff
        </a>
        @if (Model.StaffMembers.Any())
        {
            <span class="badge badge-info">@Model.StaffMembers.Count() staff</span>
        }
    </section>

    <div class="card">
        <div class="card-body">
            @if (Model.StaffMembers.Any())
            {
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th scope="col" style="width: 20%;">Name</th>
                            <th scope="col" style="width: 20%;">Role</th>
                            <th scope="col" style="width: 40%;">Event Assignments</th>
                            <th scope="col" style="width: 20%;">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.StaffMembers)
                        {
                            <tr>
                                <td>@item.FirstName @item.LastName</td>
                                <td>
                                    <span class="badge @item.Role">@item.Role</span>
                                    @if (item.IsFirstAider)
                                    {
                                        <span class="badge badge-success ml-2">First Aider</span>
                                    }
                                </td>
                                <td>
                                    @if (item.Staffings.Where(x => !x.Event.IsCanceled && x.Event.Date >= DateTime.Today).Any())
                                    {
                                        @foreach (var staffing in item.Staffings.Where(s => s.Event.Date >= DateTime.Today && !s.Event.IsCanceled))
                                        {
                                            <span class="badge badge-secondary">@staffing.Event.Name</span>
                                        }
                                    }
                                    else
                                    {
                                        <span class="text-muted">No event assignments</span>
                                    }
                                </td>
                                <td class="text-right">
                                    <form asp-page-handler="DeleteStaff" method="post">
                                        <a class="btn btn-warning btn-sm" asp-page="./Edit" asp-route-id="@item.StaffId">
                                            Edit
                                        </a>

                                        <a class="btn btn-info btn-sm" asp-page="./Details" asp-route-id="@item.StaffId">
                                            Details
                                        </a>

                                        <input type="hidden" name="staffId" value="@item.StaffId" />
                                        <button type="submit" class="btn btn-danger btn-sm">
                                            Delete
                                        </button>
                                    </form>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <div class="alert alert-info">
                    No staff members found. Click "Create New Staff" to add a team member.
                </div>
            }
        </div>
    </div>
</div>
